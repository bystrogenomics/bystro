import numpy as np
from bystro.random_matrix_theory.rmt4ds_cov_test import one_sample_cov_test,two_sample_cov_test


def test_cov_test():
    X = np.array(
        [
            -0.69716953,
            -0.43306945,
            -0.07693389,
            0.46369554,
            -0.44080913,
            -0.23538359,
            0.135654,
            -0.69403571,
            -0.4596489,
            -0.43645355,
            0.0964054,
            1.28418242,
            1.56371061,
            1.17721327,
            -0.29750743,
            0.21273754,
            0.315368,
            -0.2403947,
            -1.01646752,
            0.36010587,
            0.04096427,
            0.63755758,
            0.67192621,
            -0.23028019,
            -1.5991488,
            0.0205448,
            -0.12245256,
            0.3961603,
            -0.80850545,
            -3.78537892,
            0.69811256,
            -0.38513501,
            0.21574115,
            2.73960631,
            2.00088637,
            -0.06917132,
            -0.17289671,
            0.75399007,
            -0.48762636,
            0.2534112,
            -1.34223352,
            -0.46630413,
            -0.59443559,
            0.0065177,
            2.24134228,
            -2.20360667,
            -0.81911514,
            0.69482805,
            -0.70463317,
            4.64934077,
        ]
    )
    X = X.reshape(10, 5)
    s1 = np.eye(5)

    osct = one_sample_cov_test(X, S=s1)
    assert np.abs(osct["p_value"] - 1.1110016e-6) < 0.0001
    assert np.abs(osct["z_value"] - 4.732288) < 0.0001
    assert np.abs(osct["lrt"] - 5.044092) < 0.0001

    Y = 3 * X
    tsct = two_sample_cov_test(X, Y)
    assert np.abs(tsct["p_value"] - 0.01080272) < 0.0001
    assert np.abs(tsct["z_value"] - 2.297234) < 0.0001
    assert np.abs(tsct["lrt"] - 45.97431) < 0.0001
