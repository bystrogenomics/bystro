"""Provide dummy ancestry response for integration testing."""

from bystro.ancestry.ancestry_types import (
    AncestryResponse,
    AncestryResult,
    PopulationVector,
    ProbabilityInterval,
    SuperpopVector,
)


def make_dummy_ancestry_response(vcf_path: str) -> AncestryResponse:
    """Generate a dummy Ancestry Response."""
    return AncestryResponse(
        vcf_path=vcf_path,
        results=[
            AncestryResult(
                sample_id="foo",
                populations=PopulationVector(
                    ACB=ProbabilityInterval(lower_bound=0.0, upper_bound=0.5),
                    ASW=ProbabilityInterval(lower_bound=0.0, upper_bound=0.5),
                    BEB=ProbabilityInterval(lower_bound=0.0, upper_bound=0.5),
                    CDX=ProbabilityInterval(lower_bound=0.0, upper_bound=0.5),
                    CEU=ProbabilityInterval(lower_bound=0.0, upper_bound=0.5),
                    CHB=ProbabilityInterval(lower_bound=0.0, upper_bound=0.5),
                    CHS=ProbabilityInterval(lower_bound=0.0, upper_bound=0.5),
                    CLM=ProbabilityInterval(lower_bound=0.0, upper_bound=0.5),
                    ESN=ProbabilityInterval(lower_bound=0.0, upper_bound=0.5),
                    FIN=ProbabilityInterval(lower_bound=0.0, upper_bound=0.5),
                    GBR=ProbabilityInterval(lower_bound=0.0, upper_bound=0.5),
                    GIH=ProbabilityInterval(lower_bound=0.0, upper_bound=0.5),
                    GWD=ProbabilityInterval(lower_bound=0.0, upper_bound=0.5),
                    IBS=ProbabilityInterval(lower_bound=0.0, upper_bound=0.5),
                    ITU=ProbabilityInterval(lower_bound=0.0, upper_bound=0.5),
                    JPT=ProbabilityInterval(lower_bound=0.0, upper_bound=0.5),
                    KHV=ProbabilityInterval(lower_bound=0.0, upper_bound=0.5),
                    LWK=ProbabilityInterval(lower_bound=0.0, upper_bound=0.5),
                    MSL=ProbabilityInterval(lower_bound=0.0, upper_bound=0.5),
                    MXL=ProbabilityInterval(lower_bound=0.0, upper_bound=0.5),
                    PEL=ProbabilityInterval(lower_bound=0.0, upper_bound=0.5),
                    PJL=ProbabilityInterval(lower_bound=0.0, upper_bound=0.5),
                    PUR=ProbabilityInterval(lower_bound=0.0, upper_bound=0.5),
                    STU=ProbabilityInterval(lower_bound=0.0, upper_bound=0.5),
                    TSI=ProbabilityInterval(lower_bound=0.0, upper_bound=0.5),
                    YRI=ProbabilityInterval(lower_bound=0.0, upper_bound=0.5),
                ),
                superpops=SuperpopVector(
                    AFR=ProbabilityInterval(lower_bound=0.0, upper_bound=0.5),
                    AMR=ProbabilityInterval(lower_bound=0.0, upper_bound=0.5),
                    EAS=ProbabilityInterval(lower_bound=0.0, upper_bound=0.5),
                    EUR=ProbabilityInterval(lower_bound=0.0, upper_bound=0.5),
                    SAS=ProbabilityInterval(lower_bound=0.0, upper_bound=0.5),
                ),
                missingness=0.25,
            ),
            AncestryResult(
                sample_id="bar",
                populations=PopulationVector(
                    ACB=ProbabilityInterval(lower_bound=0.0, upper_bound=1.0),
                    ASW=ProbabilityInterval(lower_bound=0.0, upper_bound=1.0),
                    BEB=ProbabilityInterval(lower_bound=0.0, upper_bound=1.0),
                    CDX=ProbabilityInterval(lower_bound=0.0, upper_bound=1.0),
                    CEU=ProbabilityInterval(lower_bound=0.0, upper_bound=1.0),
                    CHB=ProbabilityInterval(lower_bound=0.0, upper_bound=1.0),
                    CHS=ProbabilityInterval(lower_bound=0.0, upper_bound=1.0),
                    CLM=ProbabilityInterval(lower_bound=0.0, upper_bound=1.0),
                    ESN=ProbabilityInterval(lower_bound=0.0, upper_bound=1.0),
                    FIN=ProbabilityInterval(lower_bound=0.0, upper_bound=1.0),
                    GBR=ProbabilityInterval(lower_bound=0.0, upper_bound=1.0),
                    GIH=ProbabilityInterval(lower_bound=0.0, upper_bound=1.0),
                    GWD=ProbabilityInterval(lower_bound=0.0, upper_bound=1.0),
                    IBS=ProbabilityInterval(lower_bound=0.0, upper_bound=1.0),
                    ITU=ProbabilityInterval(lower_bound=0.0, upper_bound=1.0),
                    JPT=ProbabilityInterval(lower_bound=0.0, upper_bound=1.0),
                    KHV=ProbabilityInterval(lower_bound=0.0, upper_bound=1.0),
                    LWK=ProbabilityInterval(lower_bound=0.0, upper_bound=1.0),
                    MSL=ProbabilityInterval(lower_bound=0.0, upper_bound=1.0),
                    MXL=ProbabilityInterval(lower_bound=0.0, upper_bound=1.0),
                    PEL=ProbabilityInterval(lower_bound=0.0, upper_bound=1.0),
                    PJL=ProbabilityInterval(lower_bound=0.0, upper_bound=1.0),
                    PUR=ProbabilityInterval(lower_bound=0.0, upper_bound=1.0),
                    STU=ProbabilityInterval(lower_bound=0.0, upper_bound=1.0),
                    TSI=ProbabilityInterval(lower_bound=0.0, upper_bound=1.0),
                    YRI=ProbabilityInterval(lower_bound=0.0, upper_bound=1.0),
                ),
                superpops=SuperpopVector(
                    AFR=ProbabilityInterval(lower_bound=0.0, upper_bound=1.0),
                    AMR=ProbabilityInterval(lower_bound=0.0, upper_bound=1.0),
                    EAS=ProbabilityInterval(lower_bound=0.0, upper_bound=1.0),
                    EUR=ProbabilityInterval(lower_bound=0.0, upper_bound=1.0),
                    SAS=ProbabilityInterval(lower_bound=0.0, upper_bound=1.0),
                ),
                missingness=0.5,
            ),
            AncestryResult(
                sample_id="baz",
                populations=PopulationVector(
                    ACB=ProbabilityInterval(lower_bound=0.5, upper_bound=1.0),
                    ASW=ProbabilityInterval(lower_bound=0.5, upper_bound=1.0),
                    BEB=ProbabilityInterval(lower_bound=0.5, upper_bound=1.0),
                    CDX=ProbabilityInterval(lower_bound=0.5, upper_bound=1.0),
                    CEU=ProbabilityInterval(lower_bound=0.5, upper_bound=1.0),
                    CHB=ProbabilityInterval(lower_bound=0.5, upper_bound=1.0),
                    CHS=ProbabilityInterval(lower_bound=0.5, upper_bound=1.0),
                    CLM=ProbabilityInterval(lower_bound=0.5, upper_bound=1.0),
                    ESN=ProbabilityInterval(lower_bound=0.5, upper_bound=1.0),
                    FIN=ProbabilityInterval(lower_bound=0.5, upper_bound=1.0),
                    GBR=ProbabilityInterval(lower_bound=0.5, upper_bound=1.0),
                    GIH=ProbabilityInterval(lower_bound=0.5, upper_bound=1.0),
                    GWD=ProbabilityInterval(lower_bound=0.5, upper_bound=1.0),
                    IBS=ProbabilityInterval(lower_bound=0.5, upper_bound=1.0),
                    ITU=ProbabilityInterval(lower_bound=0.5, upper_bound=1.0),
                    JPT=ProbabilityInterval(lower_bound=0.5, upper_bound=1.0),
                    KHV=ProbabilityInterval(lower_bound=0.5, upper_bound=1.0),
                    LWK=ProbabilityInterval(lower_bound=0.5, upper_bound=1.0),
                    MSL=ProbabilityInterval(lower_bound=0.5, upper_bound=1.0),
                    MXL=ProbabilityInterval(lower_bound=0.5, upper_bound=1.0),
                    PEL=ProbabilityInterval(lower_bound=0.5, upper_bound=1.0),
                    PJL=ProbabilityInterval(lower_bound=0.5, upper_bound=1.0),
                    PUR=ProbabilityInterval(lower_bound=0.5, upper_bound=1.0),
                    STU=ProbabilityInterval(lower_bound=0.5, upper_bound=1.0),
                    TSI=ProbabilityInterval(lower_bound=0.5, upper_bound=1.0),
                    YRI=ProbabilityInterval(lower_bound=0.5, upper_bound=1.0),
                ),
                superpops=SuperpopVector(
                    AFR=ProbabilityInterval(lower_bound=0.5, upper_bound=1.0),
                    AMR=ProbabilityInterval(lower_bound=0.5, upper_bound=1.0),
                    EAS=ProbabilityInterval(lower_bound=0.5, upper_bound=1.0),
                    EUR=ProbabilityInterval(lower_bound=0.5, upper_bound=1.0),
                    SAS=ProbabilityInterval(lower_bound=0.5, upper_bound=1.0),
                ),
                missingness=0.75,
            ),
        ],
    )
