#Our own, special field, tells an interface which fields to run prefix queries on
numericalFields:
    - cadd
    - phastCons
    - phyloP
    - pos
    - dbSNP.alleleNs
    - dbSNP.alleleFreqs
    - ensembl.codonNumber
    - ensembl.codonPosition
    - clinvar.alleleID
    - ensembl.clinvar.alleleID
    - ensembl.clinvar.chromStart
    - ensembl.clinvar.numberSubmitters
    - clinvar.numberSubmitters
sort:
    cadd: avg
    dbSNP.alleleNs: avg
    dbSNP.alleleFreqs: min
    ensembl.codonNumber: avg
    ensembl.codonPosition: avg
booleanFields:
   - discordant
post_index_settings:
    index:
        refresh_interval: 15s
        number_of_replicas: 1
index_settings:
    index:
        refresh_interval: -1
        number_of_replicas: 0
        number_of_shards: 12
        codec: zstd
    analysis:
        normalizer:
            lowercase_normalizer:
                type: custom
                filter:
                    - lowercase
                    - asciifolding
            uppercase_normalizer:
                type: custom
                filter:
                    - uppercase
                    - asciifolding
        filter:
            catenate_filter:
                type: word_delimiter
                catenate_words: true
                catenate_numbers: true
                catenate_all: true
                preserve_original: false
                generate_word_parts: false
                stem_english_possessive: true
                generate_number_parts: false
                split_on_numerics: false
                split_on_case_change: false
            catenate_filter_split:
                type: word_delimiter
                catenate_words: true
                catenate_numbers: true
                catenate_all: true
                preserve_original: false
                generate_word_parts: true
                stem_english_possessive: true
                generate_number_parts: false
                split_on_numerics: false
                split_on_case_change: true
            english_stemmer:
                type: stemmer
                language: light_english
            english_possessive_stemmer:
                type: stemmer
                language: possessive_english
            english_minimal_stemmer:
                type: stemmer
                language: minimal_english
            search_synonym_filter:
                type: synonym
                synonyms_path : "analysis/search-synonyms.txt"
            amino_synonym_filter:
                type: synonym
                synonyms_path : "analysis/amino-synonyms.txt"
            type_synonym_filter:
                type: synonym
                synonyms_path : "analysis/type-synonyms.txt"
            dbSNP_func_synonyms:
                type: synonym
                synonyms_path : "analysis/dbsnp-func-synonyms.txt"
            dbSNP_class_synonyms:
                type: synonym
                synonyms_path : "analysis/dbsnp-class-synonyms.txt"
            exonic_allele_function_search_synonyms:
                type: synonym
                synonyms_path : "analysis/exonic-allele-function-search-synonyms.txt"
            site_type_synonym_filter:
                type: synonym
                synonyms_path : "analysis/site-type-synonyms.txt"
            codon_map_synonym_filter:
                type: synonym
                synonyms_path : "analysis/codon-map-synonyms.txt"
            description_synonyms:
                type: synonym
                synonyms_path : "analysis/refseq-description-synonyms.txt"
            disease_synonyms:
                type: synonym
                synonyms_path : "analysis/disease-synonyms.txt"
            autocomplete_filter:
                type: edge_ngram
                min_gram: 1
                max_gram: 30
                token_chars:
                    - letter
                    - digit
            # english_stop:
            #     type: stop
            #     stopwords:
            #         - a
            #         - an
            #         - and
            #         - are
            #         - as
            #         - at
            #         - be
            #         - but
            #         - by
            #         - for
            #         - if
            #         - in
            #         - into
            #         - is
            #         - it
            #         - of
            #         - on
            #         - or
            #         - has
            #         - such
            #         - that
            #         - the
            #         - their
            #         - then
            #         - there
            #         - these
            #         - they
            #         - this
            #         - to
            #         - was
            #         - will
            #         - with
        analyzer:
            autocomplete_english:
                type: custom
                tokenizer: whitespace
                filter:
                    - lowercase
                    - asciifolding
                    #- english_stop
                    - catenate_filter
                    - english_stemmer
                    - autocomplete_filter
            autocomplete_english_split:
                type: custom
                tokenizer: whitespace
                filter:
                    - lowercase
                    - asciifolding
                    #- english_stop
                    - catenate_filter_split
                    - english_stemmer
                    - autocomplete_filter
            search_english:
                type: custom
                tokenizer: whitespace
                filter:
                    - lowercase
                    - asciifolding
                    #- english_stop
                    - catenate_filter
                    - english_stemmer
                    - search_synonym_filter
            search_english_split:
                type: custom
                tokenizer: whitespace
                filter:
                    - lowercase
                    - asciifolding
                    #- english_stop
                    - catenate_filter_split
                    - english_stemmer
                    - search_synonym_filter
            search_english_type:
                type: custom
                tokenizer: whitespace
                filter:
                    - lowercase
                    - asciifolding
                    #- english_stop
                    - catenate_filter
                    - english_stemmer
                    - type_synonym_filter
                    - dbSNP_class_synonyms
            search_english_description_synonyms:
                type: custom
                tokenizer: whitespace
                filter:
                    - lowercase
                    - asciifolding
                    #- english_stop
                    - catenate_filter_split
                    - english_stemmer
                    - description_synonyms
                    - disease_synonyms
            search_english_class:
                type: custom
                tokenizer: whitespace
                filter:
                    - lowercase
                    - asciifolding
                    #- english_stop
                    - catenate_filter
                    - english_stemmer
                    - dbSNP_class_synonyms
            search_english_func:
                type: custom
                tokenizer: whitespace
                filter:
                    - lowercase
                    - asciifolding
                    #- english_stop
                    - catenate_filter
                    - english_stemmer
                    - dbSNP_func_synonyms
            lowercase_keyword:
                type: custom
                tokenizer: keyword
                filter:
                    - lowercase
                    - asciifolding
                    #- english_stop
                    - catenate_filter
                    - english_stemmer
            lowercase_keyword_codon:
                type: custom
                tokenizer: keyword
                filter:
                    - lowercase
                    - asciifolding
                    #- english_stop
                    - catenate_filter
                    - english_stemmer
                    - codon_map_synonym_filter
                    - amino_synonym_filter
                    - search_synonym_filter
            lowercase_keyword_amino:
                type: custom
                tokenizer: keyword
                filter:
                    - lowercase
                    - asciifolding
                    #- english_stop
                    - catenate_filter
                    - english_stemmer
                    - amino_synonym_filter
                    - search_synonym_filter
mappings:
    _all:
        enabled: false
    properties:
        chrom:
            type: keyword
            normalizer: lowercase_normalizer
            # chr's are very short, and the "prefix" is a completely valid value
            # so, don't include in all, because many false positivies with ngrams
        pos:
            type: integer
        trTv:
            type: byte
        type:
            type: text
            analyzer:  autocomplete_english
            search_analyzer: search_english_type
            fields:
                exact:
                    type: keyword
                    normalizer: lowercase_normalizer
        discordant:
            type: boolean
        heterozygotes:
            type: keyword
        heterozygosity:
            type: half_float
        homozygotes:
            type: keyword
        homozygosity:
            type: half_float
        missingGenos:
            type: keyword
        missingness:
            type: half_float
        sampleMaf:
            type: half_float
        alt:
            type: keyword
            normalizer: uppercase_normalizer
        ref:
            type: keyword
            normalizer: uppercase_normalizer
        ensembl:
            properties:
                siteType:
                    type: text
                    analyzer:  autocomplete_english
                    #dbSNP func fields are similar to out siteType and exonicAlleleFunction fields
                    search_analyzer: search_english_func
                    fields:
                        exact:
                            type: keyword
                            normalizer: lowercase_normalizer
                exonicAlleleFunction:
                    type: text
                    analyzer:  autocomplete_english
                    search_analyzer: search_english_func
                    fields:
                        exact:
                            type: keyword
                            normalizer: lowercase_normalizer
                refCodon:
                    type: keyword
                    normalizer:  uppercase_normalizer
                altCodon:
                    type: keyword
                    normalizer: uppercase_normalizer
                refAminoAcid:
                    type: text
                    analyzer: lowercase_keyword
                    search_analyzer: lowercase_keyword_amino
                altAminoAcid:
                    type: text
                    analyzer:  lowercase_keyword
                    search_analyzer: lowercase_keyword_amino
                codonPosition:
                    type: byte
                codonNumber:
                    type: integer
                strand:
                    type: keyword
                name2:
                    type: keyword
                    normalizer: uppercase_normalizer
                gene:
                    type: keyword
                    normalizer: uppercase_normalizer
                name:
                    type: keyword
                    normalizer:  uppercase_normalizer
                clinvar:
                    properties:
                        alleleID:
                            type: integer
                        #phenotypeList and clinicalSignificance are more like traditional unstructured text fields
                        #I want them to be very easy to search
                        #TODO: remove high-frequency words, stopwords without screwing up all other field search
                        phenotypeList:
                            type: text
                            analyzer:  autocomplete_english_split
                            search_analyzer: search_english_description_synonyms
                        clinicalSignificance:
                            type: text
                            analyzer:  autocomplete_english_split
                            search_analyzer: search_english_split
                        type:
                            type: text
                            analyzer:  autocomplete_english
                            search_analyzer: search_english_class
                            fields:
                                exact:
                                    type: keyword
                                    normalizer: lowercase_normalizer
                        origin:
                            type: text
                            analyzer:  autocomplete_english_split
                            search_analyzer: search_english_split
                        numberSubmitters:
                            type: short
                        reviewStatus:
                            type: text
                            analyzer:  autocomplete_english_split
                            search_analyzer: search_english_split
                        chromStart:
                            type: integer
                        chromEnd:
                            type: integer
        phastCons:
            type: scaled_float
            scaling_factor: 1000
        phyloP:
            type: half_float
        cadd:
            type: half_float
        dbSNP:
            properties:
                name:
                    type: keyword
                    normalizer:  lowercase_normalizer
                strand:
                    type: keyword
                observed:
                    type: keyword
                    normalizer:  uppercase_normalizer
                class:
                    type: text
                    analyzer:  autocomplete_english
                    search_analyzer: search_english_class
                    fields:
                        exact:
                            type: keyword
                            normalizer: lowercase_normalizer
                func:
                    type: text
                    analyzer:  autocomplete_english
                    search_analyzer: search_english_func
                    fields:
                        exact:
                            type: keyword
                            normalizer: lowercase_normalizer
                alleles:
                    type: keyword
                    normalizer:  uppercase_normalizer
                alleleNs:
                    type: scaled_float
                    scaling_factor: 10
                alleleFreqs:
                    type: half_float
        clinvar:
            properties:
                alleleID:
                    type: integer
                #phenotypeList and clinicalSignificance are more like traditional unstructured text fields
                #I want them to be very easy to search
                #TODO: remove high-frequency words, stopwords without screwing up all other field search
                phenotypeList:
                    type: text
                    analyzer:  autocomplete_english_split
                    search_analyzer: search_english_description_synonyms
                    fields:
                        exact:
                            type: keyword
                            normalizer: lowercase_normalizer
                clinicalSignificance:
                    type: text
                    analyzer:  autocomplete_english_split
                    search_analyzer: search_english_split
                    fields:
                        exact:
                            type: keyword
                            normalizer: lowercase_normalizer
                type:
                    type: text
                    analyzer:  autocomplete_english
                    search_analyzer: search_english_class
                    fields:
                        exact:
                            type: keyword
                            normalizer: lowercase_normalizer
                origin:
                    type: text
                    analyzer:  autocomplete_english_split
                    search_analyzer: search_english_split
                numberSubmitters:
                    type: short
                reviewStatus:
                    type: text
                    analyzer:  autocomplete_english_split
                    search_analyzer: search_english_split
                referenceAllele:
                    type: keyword
                    normalizer:  uppercase_normalizer
                alternateAllele:
                    type: keyword
                    normalizer:  uppercase_normalizer
        gnomad:
            properties:
                genomes:
                    properties:
                        alt:
                            type: keyword
                            normalizer: uppercase_normalizer
                        id:
                            type: keyword
                            normalizer: lowercase_normalizer
                        trTv:
                            type: byte
                        af:
                            type: half_float
                        # gnomad genomes has a max of 30,992 alleles (15,496 samples), fits short
                        an:
                            type: short
                        an_afr:
                            type: short
                        an_amr:
                            type: short
                        an_asj:
                            type: short
                        an_eas:
                            type: short
                        an_fin:
                            type: short
                        an_nfe:
                            type: short
                        an_oth:
                            type: short
                        an_male:
                            type: short
                        an_female:
                            type: short
                        af_afr:
                            type: half_float
                        af_amr:
                            type: half_float
                        af_asj:
                            type: half_float
                        af_eas:
                            type: half_float
                        af_fin:
                            type: half_float
                        af_nfe:
                            type: half_float
                        af_oth:
                            type: half_float
                        af_male:
                            type: half_float
                        af_female:
                            type: half_float
                exomes:
                    properties:
                        alt:
                            type: keyword
                            normalizer: uppercase_normalizer
                        id:
                            type: keyword
                            normalizer: lowercase_normalizer
                        trTv:
                            type: byte
                        # ac:
                        #     type: integer
                        af:
                            type: half_float
                        an:
                            type: integer
                        # ac_afr:
                        #     type: integer
                        # ac_amr:
                        #     type: integer
                        # ac_asj:
                        #     type: integer
                        # ac_eas:
                        #     type: integer
                        # ac_fin:
                        #     type: integer
                        # ac_nfe:
                        #     type: integer
                        # ac_oth:
                        #     type: integer
                        # ac_male:
                        #     type: integer
                        # ac_female:
                        #     type: integer
                        an_afr:
                            type: integer
                        an_amr:
                            type: integer
                        an_asj:
                            type: integer
                        an_eas:
                            type: integer
                        an_fin:
                            type: integer
                        an_nfe:
                            type: integer
                        an_oth:
                            type: integer
                        an_male:
                            type: integer
                        an_female:
                            type: integer
                        af_afr:
                            type: half_float
                        af_amr:
                            type: half_float
                        af_asj:
                            type: half_float
                        af_eas:
                            type: half_float
                        af_fin:
                            type: half_float
                        af_nfe:
                            type: half_float
                        af_oth:
                            type: half_float
                        af_male:
                            type: half_float
                        af_female:
                            type: half_float