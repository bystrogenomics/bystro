name: Python Lint and Test

on: [pull_request]

jobs:
  build:
    name: Python Lint and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21.3"
          cache: true

      - name: Cache Rust build artifacts
        uses: actions/cache@v3
        with:
          path: |
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache pip cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('python/requirements-dev.txt', 'python/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up virtual environment
        run: |
          python -m venv ~/.venv/ci-venv

      - name: Install dependencies and build
        run: |
          source ~/.venv/ci-venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r python/requirements-dev.txt
          make develop

      - name: Linting with Ruff
        run: |
          cd python && ruff $(git ls-files '*.py')

      - name: Static analysis with MyPy
        run: |
          mypy --version
          mypy --config-file python/mypy.ini $(git ls-files '*.py')

      - name: Tests
        run: |
          cd python && pytest --durations=0 -n auto
