name: Python Lint and Test

on: [pull_request]

jobs:
  build:
    name: Python Lint and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip" # Use built-in pip caching
          cache-dependency-path: |
            python/requirements-dev.txt
            python/pyproject.toml
            python/poetry.lock  # If you use Poetry

      - name: Cache Rust build artifacts
        uses: actions/cache@v3
        with:
          path: |
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install dependencies and build
        run: |
          python -m pip install --upgrade pip
          pip install -r python/requirements-dev.txt
          make develop

      - name: Linting with Ruff
        run: |
          cd python && ruff $(git ls-files '*.py')

      - name: Static analysis with MyPy
        run: |
          mypy --version
          mypy --config-file python/mypy.ini $(git ls-files '*.py')

      - name: Tests
        run: |
          cd python && pytest --durations=0 -n auto
